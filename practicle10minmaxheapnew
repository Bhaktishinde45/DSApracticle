.

Corrected Code:

#include <iostream>
using namespace std;

void maxHeapify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] > arr[largest])
        largest = left;

    if (right < n && arr[right] > arr[largest])
        largest = right;

    if (largest != i) {
        swap(arr[i], arr[largest]);
        maxHeapify(arr, n, largest);
    }
}

void minHeapify(int arr[], int n, int i) {
    int smallest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] < arr[smallest])
        smallest = left;

    if (right < n && arr[right] < arr[smallest])
        smallest = right;

    if (smallest != i) {
        swap(arr[i], arr[smallest]);
        minHeapify(arr, n, smallest);
    }
}

int main() {
    const int n = 7;
    int marks[n];
    int maxArr[n], minArr[n];

    cout << "Enter marks: ";
    for (int i = 0; i < n; i++) {
        cin >> marks[i];
        maxArr[i] = marks[i];
        minArr[i] = marks[i];
    }

    // Build max heap
    for (int i = n / 2 - 1; i >= 0; i--)
        maxHeapify(maxArr, n, i);

    // Build min heap
    for (int i = n / 2 - 1; i >= 0; i--)
        minHeapify(minArr, n, i);

    // Output max and min values
    cout << "Maximum Marks: " << maxArr[0] << endl;
    cout << "Minimum Marks: " << minArr[0] << endl;

    return 0;
}
